" Note - Many settings have been moved into the plugin dir to keep this
" simpler
set nocompatible
filetype off

let g:CommandTPreferredImplementation='ruby'
" let g:CommandTPreferredImplementation='lua'

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'

Plugin 'AndrewRadev/splitjoin.vim'
Plugin 'Keithbsmiley/rspec.vim'
Plugin 'Lokaltog/vim-distinguished'
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'altercation/vim-colors-solarized'
Plugin 'ap/vim-css-color'
Plugin 'briancollins/vim-jst'
Plugin 'dense-analysis/ale'
Plugin 'gcmt/wildfire.vim'
Plugin 'jparise/vim-graphql'
Plugin 'kchmck/vim-coffee-script'
Plugin 'MaxMEllon/vim-jsx-pretty'
Plugin 'mileszs/ack.vim'
Plugin 'nanotech/jellybeans.vim'
Plugin 'morhetz/gruvbox'
Plugin 'puppetlabs/puppet-syntax-vim'
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/syntastic'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'thoughtbot/vim-rspec'
Plugin 'tomtom/tlib_vim'
Plugin 'tpope/vim-abolish'
Plugin 'tpope/vim-cucumber'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-rhubarb'
Plugin 'tpope/vim-markdown'
Plugin 'tpope/vim-speeddating'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-vividchalk'
Plugin 'wesQ3/vim-windowswap'
Plugin 'wincent/Command-T'
Plugin 'yaymukund/vim-rabl'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'OmniSharp/OmniSharp-vim'
call vundle#end()

syntax on

if has("autocmd")
  filetype plugin indent on
else
  set autoindent
endif

set autoread
set encoding=utf8
set expandtab
set ffs=unix,dos,mac
set guioptions=-T
set history=700
set hls
set hlsearch
set ignorecase smartcase
set incsearch
set lazyredraw
set magic
set mouse=a
set noerrorbells
set novisualbell
set number
set relativenumber
set ruler
set shiftwidth=2
set showmatch
set tabstop=2
set vb t_vb=
set virtualedit=all
set wildignore=*.o,*~,*.pyc,coverage,*.jpg,*.png,node_modules,out
set wildmenu
set wrap

" Tell vim to remember certain things when we exit
" '10  :  marks will be remembered for up to 10 previously edited files
" "100 :  will save up to 100 lines for each register
" :20  :  up to 20 lines of command-line history will be remembered
" %    :  saves and restores the buffer list
" n... :  where to save the viminfo files
set viminfo='100,\"100,:20,%,n~/.viminfo

function! ResCur()
  if line("'\"") <= line("$")
    normal! g`"
    return 1
  endif
endfunction

augroup resCur
  autocmd!
  autocmd BufWinEnter * call ResCur()
augroup END

set showcmd
if version >= 700
  set spl=en spell
  set nospell
endif

let g:clipbrdDefaultReg = '+'

match Todo /\s\+$/

" For syntastic
" let g:syntastic_always_populate_loc_list = 1
" let g:syntastic_mode_map = { 'mode': 'active', 'active_filetypes': [], 'passive_filetypes': ['html'] }
" let g:syntastic_ruby_checkers = ['mri', 'rubocop']
" let g:syntastic_python_checkers = ['pylint']

let ale_alex_executable = 'alexjs'

" For ALE
let g:ale_python_auto_pipenv = 1
let g:ale_python_flake8_change_directory = 0
let g:ale_linters = {
      \ 'cs': ['OmniSharp']
      \}
let g:ale_fixers = {
      \  '*': ['remove_trailing_lines', 'trim_whitespace'],
      \   'ruby': ['rubocop'],
      \   'python': ['black', 'ruff', 'ruff_format'],
      \   'cs': ['dotnet-format'],
      \}

let g:OmniSharp_server_use_net6 = 1
let g:OmniSharp_diagnostic_showid = 1
autocmd FileType cs nmap <silent> <buffer> <Leader>os= <Plug>(omnisharp_code_format)

" For nerdcommenter
let g:NERDSpaceDelims = 1


let g:pyindent_open_paren = 'shiftwidth()'
let $GIT_SSL_NO_VERIFY = 'true'

let g:multi_cursor_exit_from_insert_mode = 0

" Doesn't seem to work for some reason...
set title
set titlestring=VIM:\ %-25.55F\ %a%r%m titlelen=70

" Quickfix window (ack) goes to last used window instead of 'above'
set switchbuf=uselast

let g:markdown_fenced_languages = ['html', 'python', 'ruby', 'bash=sh']
