" Note - Many settings have been moved into the plugin dir to keep this
" simpler
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'

Plugin 'msanders/snipmate.vim'
Plugin 'garbas/vim-snipmate'
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'scrooloose/syntastic'
Plugin 'ap/vim-css-color'
Plugin 'wincent/Command-T'
Plugin 'scrooloose/nerdcommenter'
Plugin 'Lokaltog/vim-distinguished'
Plugin 'altercation/vim-colors-solarized'
Plugin 'nanotech/jellybeans.vim'
Plugin 'ecomba/vim-ruby-refactoring'
Plugin 'yaymukund/vim-rabl'
Plugin 'kchmck/vim-coffee-script'
Plugin 'mileszs/ack.vim'
Plugin 'briancollins/vim-jst'
Plugin 'thoughtbot/vim-rspec'
Plugin 'puppetlabs/puppet-syntax-vim'
Plugin 'gcmt/wildfire.vim'
Plugin 'wesQ3/vim-windowswap'
Plugin 'AndrewRadev/splitjoin.vim'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-vividchalk'
Plugin 'tpope/vim-markdown'
Plugin 'tpope/vim-cucumber'
Plugin 'tpope/vim-speeddating'
Plugin 'tpope/vim-abolish'
Plugin 'Keithbsmiley/rspec.vim'
Plugin 'dense-analysis/ale'
call vundle#end()

syntax on

if has("autocmd")
  filetype plugin indent on
else
  set autoindent
endif

set autoread
set encoding=utf8
set expandtab
set ffs=unix,dos,mac
set guioptions=-T
set history=700
set hls
set hlsearch
set ignorecase smartcase
set incsearch
set lazyredraw
set magic
set mouse=a
set noerrorbells
set novisualbell
set number
set relativenumber
set ruler
set shiftwidth=2
set showmatch
set tabstop=2
set vb t_vb=
set virtualedit=all
set wildignore=*.o,*~,*.pyc,coverage,*.jpg,*.png,node_modules,out
set wildmenu
set wrap

" Tell vim to remember certain things when we exit
" '10  :  marks will be remembered for up to 10 previously edited files
" "100 :  will save up to 100 lines for each register
" :20  :  up to 20 lines of command-line history will be remembered
" %    :  saves and restores the buffer list
" n... :  where to save the viminfo files
set viminfo='100,\"100,:20,%,n~/.viminfo

function! ResCur()
  if line("'\"") <= line("$")
    normal! g`"
    return 1
  endif
endfunction

augroup resCur
  autocmd!
  autocmd BufWinEnter * call ResCur()
augroup END

set showcmd
if version >= 700
  set spl=en spell
  set nospell
endif

let g:clipbrdDefaultReg = '+'

"Remove trailing whitespace
autocmd FileType md,sh,python,ruby,coffee autocmd BufWritePre * :%s/\s\+$//e
match Todo /\s\+$/

" For syntastic
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_mode_map = { 'mode': 'active', 'active_filetypes': [], 'passive_filetypes': ['html'] }
let g:syntastic_ruby_checkers = ['mri', 'rubocop']
let g:syntastic_python_checkers = ['pylint']

" For nerdcommenter
let g:NERDSpaceDelims=1

let $GIT_SSL_NO_VERIFY = 'true'

let g:multi_cursor_exit_from_insert_mode = 0
